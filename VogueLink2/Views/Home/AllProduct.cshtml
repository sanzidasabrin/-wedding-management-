@model IEnumerable<VogueLink2.Models.Product>

@{
    ViewBag.Title = "AllProduct";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    
    <title>Products</title>
</head>

<body>
    <h1>VogueLink</h1>

    <div style="margin-top: 40px;">
        <form action="@Url.Action("Search","Home")" method="get" style="display: flex; align-items: center; margin-bottom: 40px;">
            <select name="category" style="padding: 10px; border: 1px solid #ccc; border-radius: 20px 0 0 20px; background-color: #000000; color: white; width: 200px;">
                <option value="all">Select Category</option>
                <option value="name">Name</option>
                <option value="brand">Brand</option>
                <option value="type">Type</option>
                <option value="fabric">Fabric</option>
            </select>
            <input type="text" name="searchText" style="flex: 1; padding: 10px; border: 1px solid #ccc; border-radius: 0; margin: 0;" placeholder="Search...">
            <button type="submit" style="padding: 10px 20px; background-color: #000000; border: none; border-radius: 0 20px 20px 0; color: white; width: 100px;">Search</button>
        </form>
    </div>

    <div style="background-color: @(string.IsNullOrEmpty(ViewBag.notify) ? "transparent" : "#FF0000");">
        @if (!string.IsNullOrEmpty(ViewBag.notify))
        {
            <p>@ViewBag.notify</p>
        }
    </div>

    <div style="margin-bottom:50px">
        <button style="background-color: #000; color: white; padding: 10px; border: none; border-radius: 5px; cursor: pointer;" onclick="toggleCollapsible()">Filter Product</button>
        <div style="background-color: #111111; margin-bottom: 50px; padding: 20px; display: none; border-radius: 10px;" id="collapsibleContent">
            <form action="@Url.Action("Filter", "Home")" method="get">
                <div style="display: inline-block; margin: 20px; padding: 10px;">
                    <label for="low-price" style="color: white;">Low Price:</label>
                    <input type="number" id="low-price" name="lowPrice" placeholder="Enter low price" value="0">
                </div>
                <div style="display: inline-block; margin: 20px; padding: 10px;">
                    <label for="high-price" style="color: white;">High Price:</label>
                    <input type="number" id="high-price" name="highPrice" placeholder="Enter high price" value="1000000">
                </div>
                <button style="background-color: #000; color: white; padding: 5px 10px; border: none; border-radius: 5px; cursor: pointer;" type="submit">Apply</button>
            </form>
            
        </div>

        
    </div>

        
    


    @if (Model != null)
    {

        <div class="container">
            <h3 class="display-4">Products</h3>
            <div class="row">

                @foreach (var pro in Model)
                {
                    <div class="col-md-4">
                        <div class="card mb-4 shadow-sm" style="width: 400px; height: 500px;">
                            @if (pro.Product_Img1 == null)
                            {
                                <img src="~/ProjectImg/R.png" width="100%" alt="Product Image">
                            }
                            else
                            {
                                <img src="@Html.DisplayFor(modelItem => pro.Product_Img1)" width="100%" alt="Product Image">
                            }
                            <div class="card-body">
                                <h3 class="card-title">@pro.Product_Name</h3>
                                <p class="card-text">@pro.Product_Type</p>
                                <p class="card-text">@pro.Product_Price</p>
                                <div class="d-flex justify-content-between align-items-center">
                                    <div class="btn-group">
                                        <a href="/Home/ProductDetails/@pro.Product_Id" class="btn btn-sm btn-dark">View details</a>
                                    </div>
                                    <small class="text-muted">@pro.Product_Material</small>
                                </div>
                            </div>
                        </div>
                    </div>
                }


            </div>
        </div>
    }
    else
    {
        <div style="display: flex; justify-content: center; align-items: center; height: 300px;">
            <h1>No Product found</h1>
        </div>
    }

    <script>
        function toggleCollapsible() {
            var content = document.getElementById('collapsibleContent');
            content.style.display = content.style.display === 'none' ? 'block' : 'none';
        }
        function filterByGender(gender) {
            // Perform filtering based on the selected gender (male/female)
            console.log('Filtering by gender:', gender);
        }
    </script>

</body>
</html>